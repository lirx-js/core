{
  "name": "ts-lib-seed",
  "version": "2.5.2",
  "description": "Seed to build a library",
  "main": "index.js",
  "scripts": {
    "build": "yarn run build:package",
    "dev": "yarn run dev:package",
    "test": "jest",
    "": "",
    "___________BUILD_AND_PUBLISH___________": "",
    "build:dev": "yarn run build:package:index-file && yarn run bump:publish:package:dev",
    "build:prod": "yarn run install:prod && yarn run build:package:index-file && yarn run publish:package:prod",
    "_________________BUILD_________________": "",
    "build:package:index-file": "echo \"build:package:index-file\" && yarn run generate:index-file && yarn run build:package && yarn run remove:index-file",
    "build:package": "echo \"build:package\" && yarn run clean:dist && yarn run build:package:tsc && yarn run build:package:scss && yarn run assemble:package",
    "build:package:tsc": "echo \"build:package:tsc\" && yarn run build:package:tsc:module:mjs && yarn run build:package:tsc:cjs:cjs",
    "build:package:scss": "echo \"build:package:scss\" && yarn run copy:scss-files",
    "assemble:package": "echo \"assemble:package\" && node tools/package/assemble-package.mjs",
    "______MJS_____": "",
    "build:package:tsc:module:mjs": "echo \"build:package:tsc:module:mjs\" && yarn run build:package:tsc:module && yarn run build:package:rename:mjs && yarn run build:package:resolve:mjs",
    "build:package:tsc:module": "echo \"build:package:tsc:module\" && tsc -p tsconfig/tsconfig.build.package.module.json",
    "build:package:rename:mjs": "echo \"build:package:rename:mjs\" && node tools/package/rename/rename-mjs.mjs",
    "build:package:resolve:mjs": "echo \"build:package:resolve:mjs\" && node tools/package/resolve/resolve-node-modules.mjs --mjs",
    "______CJS_____": "",
    "build:package:tsc:cjs:cjs": "echo \"build:package:tsc:cjs:cjs\" && yarn run build:package:tsc:cjs && yarn run build:package:rename:cjs && yarn run build:package:resolve:cjs",
    "build:package:resolve-import-meta:cjs": "echo \"build:package:tsc:resolve-import-meta:cjs\" && node tools/package/resolve/resolve-import-meta.js",
    "build:package:clean:resolve-import-meta:cjs": "echo \"build:package:clean:resolve-import-meta:cjs\" &&  rm -rf ../dist/ts_cjs",
    "build:package:tsc:cjs": "echo \"build:package:tsc:cjs\" && tsc -p tsconfig/tsconfig.build.package.cjs.json",
    "build:package:tsc:full:cjs": "echo \"build:package:tsc:full:cjs\" && yarn run build:package:resolve-import-meta:cjs && yarn run build:package:tsc:cjs && yarn run build:package:clean:resolve-import-meta:cjs",
    "build:package:rename:cjs": "echo \"build:package:rename:cjs\" && node tools/package/rename/rename-cjs.mjs",
    "build:package:resolve:cjs": "echo \"build:package:resolve:cjs\" && node tools/package/resolve/resolve-node-modules.mjs --cjs",
    "_________________DEV_________________": "",
    "dev:package": "echo \"dev:package\" && yarn run clean:dist && yarn run dev:package:tsc",
    "dev:package:tsc": "echo \"dev:package:tsc\" && yarn run dev:package:tsc:module & yarn run dev:package:tsc:cjs",
    "dev:package:tsc:module": "echo \"dev:package:tsc:module\" && yarn run dev:package:tsc:module:linux",
    "dev:package:tsc:module:linux": "echo \"dev:package:tsc:module:linux\" && tsc-watch -p tsconfig/tsconfig.build.package.module.json --onSuccess \"yarn run dev:package:tsc:module:onsuccess\"",
    "dev:package:tsc:module:windows": "echo \"dev:package:tsc:module:windows\" && tsc-watch -p tsconfig/tsconfig.build.package.module.json --onSuccess \\\"yarn run dev:package:tsc:module:onsuccess\\\"",
    "dev:package:tsc:module:onsuccess": "echo \"dev:package:tsc:module:onsuccess\" && yarn run build:package:rename:mjs && yarn run build:package:resolve:mjs && yarn run assemble:package",
    "dev:package:tsc:cjs": "echo \"dev:package:tsc:cjs\" && yarn run dev:package:tsc:cjs:linux",
    "dev:package:tsc:cjs:windows": "echo \"dev:package:tsc:cjs:windows\" && tsc-watch -p tsconfig/tsconfig.build.package.cjs.json --onSuccess \\\"yarn run dev:package:tsc:cjs:onsuccess\\\"",
    "dev:package:tsc:cjs:linux": "echo \"dev:package:tsc:cjs:linux\" && tsc-watch -p tsconfig/tsconfig.build.package.cjs.json --onSuccess \"yarn run dev:package:tsc:cjs:onsuccess\"",
    "dev:package:tsc:cjs:onsuccess": "echo \"dev:package:tsc:cjs:onsuccess\" && yarn run build:package:rename:cjs",
    "_____SCSS_____": "",
    "copy:scss-files": "echo \"copy:scss-files\" && node tools/package/copy/copy-scss-files.mjs",
    "_________________INDEX_FILE_________________": "",
    "remove:index-file": "rm ../index.ts",
    "generate:index-file": "node tools/index/generate-index-file.mjs",
    "_________________MANAGE_PACKAGE_______________": "",
    "bump:publish:package:dev": "yarn run bump:package:version && yarn run publish:package:dev",
    "bump:package:version": "echo \"bump:package:version\" && node tools/package/bump-package-version.mjs",
    "publish:package:dev": "cd ../dist && npm publish --registry http://localhost:4873/",
    "publish:package:prod": "cd ../dist && npm publish --access public --registry https://registry.npmjs.org",
    "install:verdaccio": "npm install --global verdaccio",
    "run:verdaccio": "verdaccio",
    "_________________INSTALL_________________": "",
    "install:dev": "node tools/install/install.mjs --dev",
    "install:prod": "node tools/install/install.mjs",
    "_________________FORMAT_________________": "",
    "prettier:watch": "onchange \"../src/**/*.{js,ts,html,scss}\" -- prettier --write --ignore-unknown --config ./.prettierrc \\{\\{changed\\}\\}",
    "prettier:format": "prettier --write --ignore-unknown --config ./.prettierrc \"../src/**/*.{js,ts,html,scss}\"",
    "_________________OTHERS_________________": "",
    "clean:dist": "echo \"clean:dist\" && find ../ -path \"../dist/*\" -delete",
    "ncu": "npx npm-check-updates",
    "doc": "yarn run generate:index-file && yarn run generate:doc && yarn run remove:index-file",
    "generate:doc": "typedoc ../index.ts --json ../dist/doc.json --tsconfig ./tsconfig.json"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/lifaon74/ts-lib-seed"
  },
  "keywords": [],
  "author": "Valentin Richard",
  "license": "MIT",
  "access": "public",
  "devDependencies": {
    "@types/jest": "^29.5.12",
    "acorn": "^8.11.3",
    "acorn-walk": "^8.3.2",
    "astring": "^1.8.6",
    "cssnano": "^6.0.3",
    "html-minifier-terser": "^7.2.0",
    "jest": "^29.7.0",
    "onchange": "^7.1.0",
    "postcss": "^8.4.35",
    "prettier": "^3.2.5",
    "prettier-plugin-organize-imports": "^3.2.4",
    "sass": "1.62.1",
    "ts-jest": "^29.1.2",
    "tsc-watch": "^6.0.4",
    "tslib": "^2.6.2",
    "typedoc": "^0.25.8",
    "typescript": "^5.3.3"
  },
  "packageManager": "yarn@4.1.0"
}
